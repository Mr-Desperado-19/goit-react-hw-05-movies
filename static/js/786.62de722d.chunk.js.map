{"version":3,"file":"static/js/786.62de722d.chunk.js","mappings":"uQAoDA,MA9CA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,IAAgBN,GAD1C,OACQO,EADR,OAEEH,EAASG,GAFX,4CADc,uBAAC,WAAD,wBAMdC,EACD,GAAE,CAACR,KAGF,8BACGG,IACC,4BACE,wBAAKA,EAAMM,SACX,uBAAIN,EAAMO,YACV,gBAAKC,IAAG,yCAAoCR,EAAMS,aAAeC,IAAKV,EAAMM,SAE5E,SAAC,KAAD,CAAMK,GAAG,OAAT,UACE,mCAGF,SAAC,KAAD,CAAMA,GAAG,UAAT,UACE,sCAGF,SAAC,EAAAC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UAMX,C,sLC1CKC,EAAU,mC,SAGDC,EAAQ,GAARA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAuBC,GAAvB,kFACQC,EADR,sCAC6CD,EAD7C,oBACiEF,GADjE,SAEyBI,MAAMD,GAF/B,cAEQE,EAFR,gBAGqBA,EAASC,OAH9B,cAGQC,EAHR,yBAISA,GAJT,kEAQO,SAAeC,IAAtB,+B,aAAO,O,oBAAA,uGACEP,EAAQ,yBADV,kEAKA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,0FACET,EAAQ,uBAAD,OAAwBS,EAAxB,OADT,kEAKA,SAAerB,EAAtB,kC,aAAO,O,oBAAA,WAA+BN,GAA/B,0FACEkB,EAAQ,UAAD,OAAWlB,EAAX,OADT,kEAKA,SAAe4B,EAAtB,kC,aAAO,O,oBAAA,WAA+B5B,GAA/B,0FACEkB,EAAQ,UAAD,OAAWlB,EAAX,eADT,kEAKA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,0FACEkB,EAAQ,UAAD,OAAWlB,EAAX,eADT,kE,sBC/BP,SAAS8B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["page/movieDetails/MovieDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/api';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      const movieData = await getMovieDetails(movieId);\n      setMovie(movieData);\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <h1>{movie.title}</h1>\n          <p>{movie.overview}</p>\n          <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n\n          <Link to=\"cast\">\n            <p>cast</p>\n          </Link>\n\n          <Link to=\"reviews\">\n            <p>reviews</p>\n          </Link>\n\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );  \n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      movieId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MovieDetails;","const API_KEY = 'd9b2a8e4929d31f3c3363f94bf5b0782';\n\n// Функція для виконання запиту до API\nasync function apiCall(endpoint) {\n  const url = `https://api.themoviedb.org/3${endpoint}&api_key=${API_KEY}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\n// Функція для отримання списку найпопулярніших фільмів\nexport async function getTrendingMovies() {\n  return apiCall('/trending/movie/day?');\n}\n\n// Функція для пошуку фільму за ключовим словом\nexport async function searchMovies(query) {\n  return apiCall(`/search/movie?query=${query}&`);\n}\n\n// Функція для отримання повної інформації про фільм\nexport async function getMovieDetails(movieId) {\n  return apiCall(`/movie/${movieId}?`);\n}\n\n// Функція для отримання інформації про акторський склад фільму\nexport async function getMovieCredits(movieId) {\n  return apiCall(`/movie/${movieId}/credits?`);\n}\n\n// Функція для отримання оглядів фільму\nexport async function getMovieReviews(movieId) {\n  return apiCall(`/movie/${movieId}/reviews?`);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","getMovieDetails","movieData","fetchData","title","overview","src","poster_path","alt","to","Suspense","fallback","API_KEY","apiCall","endpoint","url","fetch","response","json","data","getTrendingMovies","searchMovies","query","getMovieCredits","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}